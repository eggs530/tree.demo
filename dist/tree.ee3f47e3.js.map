{"version":3,"sources":["tree.js"],"names":["creatTree","value","data","children","parent","addChild","node","newNode","push","travel","tree","fn","i","length","find","result","undefined","removeNode","siblings","index","splice","node2","node3","node5","console","log"],"mappings":"AAAA,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AACzB,SAAO;AACHC,IAAAA,IAAI,EAAED,KADH;AAEHE,IAAAA,QAAQ,EAAE,IAFP;AAGHC,IAAAA,MAAM,EAAE;AAHL,GAAP;AAKH,CAND;;AAOA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAOL,KAAP,EAAiB;AAC9B,MAAMM,OAAO,GAAG;AACZL,IAAAA,IAAI,EAAED,KADM;AAEZE,IAAAA,QAAQ,EAAE,IAFE;AAGZC,IAAAA,MAAM,EAAEE;AAHI,GAAhB;AAKAA,EAAAA,IAAI,CAACH,QAAL,GAAgBG,IAAI,CAACH,QAAL,IAAiB,EAAjC,CAN8B,CAMK;;AACnCG,EAAAA,IAAI,CAACH,QAAL,CAAcK,IAAd,CAAmBD,OAAnB;AACA,SAAOA,OAAP;AACH,CATD,EAWA;;;AACA,IAAME,MAAM,GAAG,SAATA,MAAS,CAACC,IAAD,EAAOC,EAAP,EAAc;AACzBA,EAAAA,EAAE,CAACD,IAAD,CAAF;;AACA,MAAI,CAACA,IAAI,CAACP,QAAV,EAAoB;AAAC;AACjB;AACH;;AACD,OAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACP,QAAL,CAAcU,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC3CH,IAAAA,MAAM,CAACC,IAAI,CAACP,QAAL,CAAcS,CAAd,CAAD,EAAmBD,EAAnB,CAAN,CAD2C,CACf;AAC/B;AACJ,CARD;;AAUA,IAAMG,IAAI,GAAG,SAAPA,IAAO,CAACJ,IAAD,EAAOJ,IAAP,EAAgB;AACzB,MAAII,IAAI,KAAKJ,IAAb,EAAmB;AACf,WAAOI,IAAP;AACH,GAFD,MAEO,IAAIA,IAAI,CAACP,QAAT,EAAmB;AACtB,SAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACP,QAAL,CAAcU,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC3C,UAAMG,MAAM,GAAGD,IAAI,CAACJ,IAAI,CAACP,QAAL,CAAcS,CAAd,CAAD,EAAmBN,IAAnB,CAAnB;;AACA,UAAIS,MAAJ,EAAY;AAAE,eAAOA,MAAP;AAAe;AAChC;;AACD,WAAOC,SAAP;AACH,GANM,MAMA;AACH,WAAOA,SAAP;AACH;AACJ,CAZD;;AAaA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACP,IAAD,EAAOJ,IAAP,EAAgB;AAC/B,MAAMY,QAAQ,GAAGZ,IAAI,CAACF,MAAL,CAAYD,QAA7B;AACA,MAAIgB,KAAK,GAAG,CAAZ;;AACA,OAAK,IAAIP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGM,QAAQ,CAACL,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtC,QAAIM,QAAQ,CAACN,CAAD,CAAR,KAAgBN,IAApB,EAA0B;AACtBa,MAAAA,KAAK,GAAGP,CAAR;AACH;AACJ;;AACDM,EAAAA,QAAQ,CAACE,MAAT,CAAgBD,KAAhB,EAAuB,CAAvB;AACH,CATD;;AAUA,IAAMT,IAAI,GAAGV,SAAS,CAAC,EAAD,CAAtB;AACA,IAAMqB,KAAK,GAAGhB,QAAQ,CAACK,IAAD,EAAO,EAAP,CAAtB;AACA,IAAMY,KAAK,GAAGjB,QAAQ,CAACK,IAAD,EAAO,EAAP,CAAtB;AACA,IAAMa,KAAK,GAAGlB,QAAQ,CAACK,IAAD,EAAO,EAAP,CAAtB;AACAL,QAAQ,CAACK,IAAD,EAAO,EAAP,CAAR;AACAL,QAAQ,CAACK,IAAD,EAAO,EAAP,CAAR;AACAL,QAAQ,CAACgB,KAAD,EAAQ,GAAR,CAAR;AACAhB,QAAQ,CAACgB,KAAD,EAAQ,GAAR,CAAR;AACAhB,QAAQ,CAACgB,KAAD,EAAQ,GAAR,CAAR;AACAG,OAAO,CAACC,GAAR,CAAYf,IAAZ;AAEAD,MAAM,CAACC,IAAD,EAAO,UAACJ,IAAD;AAAA,SAAUkB,OAAO,CAACC,GAAR,CAAYnB,IAAI,CAACJ,IAAjB,CAAV;AAAA,CAAP,CAAN;AAEAe,UAAU,CAACP,IAAD,EAAOa,KAAP,CAAV;AACAC,OAAO,CAACC,GAAR,CAAYf,IAAZ","file":"tree.ee3f47e3.js","sourceRoot":"..\\src","sourcesContent":["const creatTree = (value) => {\r\n    return {\r\n        data: value,\r\n        children: null,\r\n        parent: null,\r\n    }\r\n}\r\nconst addChild = (node, value) => {\r\n    const newNode = {\r\n        data: value,\r\n        children: null,\r\n        parent: node,\r\n    }\r\n    node.children = node.children || []//保底\r\n    node.children.push(newNode)\r\n    return newNode\r\n}\r\n\r\n//遍历一个数的所有节点\r\nconst travel = (tree, fn) => {\r\n    fn(tree)\r\n    if (!tree.children) {//children可能为空\r\n        return\r\n    }\r\n    for (let i = 0; i < tree.children.length; i++) {\r\n        travel(tree.children[i], fn)//遍历子节点\r\n    }\r\n}\r\n\r\nconst find = (tree, node) => {\r\n    if (tree === node) {\r\n        return tree\r\n    } else if (tree.children) {\r\n        for (let i = 0; i < tree.children.length; i++) {\r\n            const result = find(tree.children[i], node)\r\n            if (result) { return result }\r\n        }\r\n        return undefined\r\n    } else {\r\n        return undefined\r\n    }\r\n}\r\nconst removeNode = (tree, node) => {\r\n    const siblings = node.parent.children\r\n    let index = 0\r\n    for (let i = 1; i < siblings.length; i++) {\r\n        if (siblings[i] === node) {\r\n            index = i\r\n        }\r\n    }\r\n    siblings.splice(index, 1)\r\n}\r\nconst tree = creatTree(10)\r\nconst node2 = addChild(tree, 20)\r\nconst node3 = addChild(tree, 30)\r\nconst node5 = addChild(tree, 50)\r\naddChild(tree, 30)\r\naddChild(tree, 40)\r\naddChild(node2, 101)\r\naddChild(node2, 102)\r\naddChild(node2, 103)\r\nconsole.log(tree)\r\n\r\ntravel(tree, (node) => console.log(node.data))\r\n\r\nremoveNode(tree, node5)\r\nconsole.log(tree)\r\n\r\n"]}